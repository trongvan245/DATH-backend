generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ACTIVITY_LOG {
  LogID     Int       @id @default(autoincrement())
  Timestamp DateTime? @db.Timestamp(0)
  EventType String?   @db.VarChar(50)
  UserID    Int
  DeviceID  Int
  USER      USER      @relation(fields: [UserID], references: [UserID], onDelete: Cascade, map: "ACTIVITY_LOG_ibfk_1")
  DEVICE    DEVICE    @relation(fields: [DeviceID], references: [DeviceID], onDelete: Cascade, map: "ACTIVITY_LOG_ibfk_2")

  @@index([DeviceID], map: "DeviceID")
  @@index([UserID], map: "UserID")
}

model BLACKLIST {
  Token String @id @db.VarChar(100)
}

model DEVICE {
  DeviceID     Int            @id @default(autoincrement())
  Devicename   String?        @db.VarChar(50)
  RoomID       Int
  Status       String?        @db.VarChar(50)
  AdafruitKey  String?        @db.VarChar(50)
  ACTIVITY_LOG ACTIVITY_LOG[]
  ROOM         ROOM           @relation(fields: [RoomID], references: [RoomID], onDelete: Cascade, map: "DEVICE_ibfk_1")

  @@index([RoomID], map: "RoomID")
}

model ROOM {
  RoomID      Int      @id @default(autoincrement())
  Roomname    String?  @db.VarChar(50)
  UserID      Int
  AdafruitKey String?  @db.VarChar(50)
  DEVICE      DEVICE[]
  USER        USER     @relation(fields: [UserID], references: [UserID], onDelete: Cascade, map: "ROOM_ibfk_1")

  @@index([UserID], map: "UserID")
}

model USER {
  UserID       Int            @id @default(autoincrement())
  Username     String?        @db.VarChar(50)
  Password     String?        @db.VarChar(255)
  Email        String?        @db.VarChar(255)
  ACTIVITY_LOG ACTIVITY_LOG[]
  ROOM         ROOM[]
}
